{"version":3,"sources":["components/Search.js","utils/API.js","components/Saved.js","components/SideNav.js","App.js","serviceWorker.js","index.js"],"names":["Search","this","props","handlePageChange","_this$props","classes","bookList","saveBook","react_default","a","createElement","Grid_default","container","spacing","alignItems","alignContent","length","map","book","key","bookId","style","display","item","xs","sm","Card_default","className","card","raised","details","CardContent_default","content","Typography_default","variant","title","authors","join","description","CardActions_default","actions","Button_default","href","link","target","size","color","onClick","CardMedia_default","cover","component","alt","image","PureComponent","withStyles","theme","flexWrap","flex","flexDirection","height","justifyContent","justifySelf","paddingLeft","API","getSavedBooks","axios","get","getBookById","concat","bookData","post","updateBook","put","deleteBook","delete","searchGoogleBooks","query","params","q","Saved","state","savedBooks","then","_ref","data","_this","setState","catch","err","console","log","deleteId","find","_ref2","_id","_this2","Component","width","padding","textField","dense","marginTop","button","align","Divider_default","List_default","Link","to","ListItem_default","selected","activePage","ListItemIcon_default","Search_default","ListItemText_default","primary","Book_default","noValidate","autoComplete","onSubmit","handleFormSubmit","TextField_default","id","label","value","bookQuery","onChange","handleInputChange","margin","name","App","mobileOpen","activePageHeader","items","volumeInfo","searchInfo","textSnippet","infoLink","imageLinks","thumbnail","pageTitle","handleDrawerToggle","event","preventDefault","_event$target","Object","defineProperty","BrowserRouter","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","noWrap","drawer","Hidden_default","smUp","implementation","Drawer_default","anchor","direction","open","onClose","paper","drawerPaper","ModalProps","keepMounted","components_SideNav","xsDown","toolbar","Switch","Route","exact","path","render","components_Search","components_Saved","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","background","flexGrow","unit","withTheme","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9648a5b.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  card: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  details: {\n    flex: '1 1 70%'\n  },\n  content: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'flex-start',\n  },  \n  cover: {\n    flex: '1 1 30%'\n  },\n  actions: {\n   justifySelf: 'flex-end',\n   paddingLeft: 0\n  }\n});\n\nclass Search extends PureComponent {\n  \n  componentDidMount() {\n    this.props.handlePageChange(\"Search\");\n  }\n\n  render() {\n    const {classes, bookList, saveBook} = this.props;\n    return (\n      <div>\n        <Grid container spacing={24} alignItems=\"stretch\" alignContent=\"stretch\">\n          {!bookList.length ? (<Typography variant='h4'>No Books Found!</Typography>) : (\n            bookList.map(book => {\n              return (\n                <Grid key={book.bookId} style={{'display': 'grid'}} item xs={12} sm={6} >\n                  <Card className={classes.card} raised>\n                    <div className={classes.details}>\n\n                    <CardContent className={classes.content}>\n                      <Typography variant='title'>{book.title}</Typography>\n                      <Typography variant='subtitle1' >By {book.authors.join(\", \")}</Typography>\n                      <Typography variant='body1'>{book.description}</Typography>\n                      <CardActions className={classes.actions}>\n                        <Button href={book.link} target={\"_blank\"} size=\"small\" color=\"primary\">\n                          View More Information\n                      </Button>\n                        <Button \n                        size='small' color='secondary' onClick={() => saveBook(book.bookId)}>Save This Book</Button>\n                      </CardActions>\n                    </CardContent>\n                    </div>\n                    <CardMedia\n                      className={classes.cover}\n                      component=\"img\"\n                      alt={book.title}\n                      image={book.image}\n                      title={book.title}\n                    />\n                  </Card>\n                </Grid>\n              )\n            })\n          )}\n          \n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Search);\n","import axios from 'axios';\n\nexport default {\n  getSavedBooks : function () {\n    return axios.get('/api/books')\n  },\n  getBookById : function (bookId) {\n    return axios.get(`/api/books/${bookId}`)\n  },\n  saveBook : function (bookData) {\n    return axios.post('/api/books', bookData)\n  },\n  updateBook : function (bookId, bookData) {\n    return axios.put(`/api/books/${bookId}`, bookData)\n  },\n  deleteBook : function (bookId) {\n    return axios.delete(`/api/books/${bookId}`)\n  },\n  // https://www.googleapis.com/books/v1/volumes?q=Harry+Potter\n  searchGoogleBooks : function (query) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes\", { params: { q: query}})}\n  };\n\n  // axios.get(url, options)\n  /* options\n  {\n    params: {\n      q: \"harry potter\",\n      year: 1999\n    },\n    authorization: {\n      token: \"dlkgsdjalkgj4ut30t94ut094u8t\"\n    }\n  }\n*/","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport {Redirect} from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  card: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  details: {\n    flex: '1 1 70%'\n  },\n  content: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'flex-end',\n  },\n  cover: {\n    flex: '1 1 30%'\n  },\n  actions: {\n    justifySelf: 'flex-end',\n    paddingLeft: 0\n  }\n});\n\nclass Saved extends Component {\n\n  state = {\n    savedBooks: []\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.handlePageChange(\"Saved\");\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(({data: savedBooks}) => this.setState({savedBooks}))\n      .catch(err => console.log(err));\n  }\n\n  deleteBook = (bookId) => {\n    const { _id: deleteId } = this.state.savedBooks.find(({_id}) => bookId === _id);\n    API.deleteBook(deleteId)\n      .then(() => this.getSavedBooks())\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {savedBooks: bookList} = this.state;\n    \n    return (\n      <div>\n        <Grid container spacing={24} alignItems=\"stretch\" alignContent=\"stretch\">\n          {!bookList.length ? (<Typography variant='h4'>No Books Found!</Typography>) : (\n            bookList.map(book => {\n              return (\n                <Grid key={book.bookId} item xs={12} >\n                  <Card className={classes.card} raised>\n                    <div className={classes.details}>\n\n                      <CardContent className={classes.content}>\n                        <Typography variant='title'>{book.title}</Typography>\n                        <Typography variant='subtitle1' >By {book.authors.join(\", \")}</Typography>\n                        <Typography variant='body1'>{book.description}</Typography>\n                        <CardActions className={classes.actions}>\n                          <Button href={book.link} size=\"small\" color=\"primary\">\n                            View More Information\n                      </Button>\n                          <Button size='small' color='secondary' onClick={() => this.deleteBook(book._id)}>Delete This Book</Button>\n                        </CardActions>\n                      </CardContent>\n                    </div>\n                    <CardMedia\n                      className={classes.cover}\n                      component=\"img\"\n                      alt={book.title}\n                      image={book.image}\n                      title={book.title}\n                    />\n                  </Card>\n                </Grid>\n              )\n            })\n          )}\n\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Saved);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {withStyles} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookIcon from '@material-ui/icons/Book';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '95%',\n    padding: 20\n  },\n  textField: {\n\n    width: '100%'\n  },\n  dense: {\n    marginTop: 19\n  },\n  button: {\n    width: '100%'\n  }\n});\n\n\nconst SideNav = (props) => {\n  const {classes} = props;\n  return (\n    <div>\n      <Typography align=\"center\" variant=\"h2\" color=\"textPrimary\">\n        Google<br/>Book<br/>Search\n      </Typography>\n      <Divider/>\n\n      <List>\n        <Link to={`/search`}>\n          <ListItem\n            selected={props.activePage === \"Search\"\n            ? true\n            : false}\n            button>\n            <ListItemIcon>\n              <SearchIcon/>\n            </ListItemIcon>\n            <ListItemText primary={\"Search\"}/>\n          </ListItem>\n        </Link>\n        <Link to={`/saved`}>\n          <ListItem\n            selected={props.activePage === \"Saved\"\n            ? true\n            : false}\n            button>\n            <ListItemIcon>\n              <BookIcon/>\n            </ListItemIcon>\n            <ListItemText primary={\"Saved Books\"}/>\n          </ListItem>\n        </Link>\n\n      </List>\n      <Divider/>\n      <div className={classes.container}>\n        <form noValidate autoComplete=\"off\" style={{\n          width: '100%'\n        }} onSubmit={props.handleFormSubmit}>\n          <TextField\n            id=\"standard-name\"\n            label=\"Book Name\"\n            className={classes.textField}\n            value={props.bookQuery}\n            onChange={props.handleInputChange}\n            margin=\"normal\"\n            name=\"bookQuery\"/>\n          <Button\n            component={Link}\n            to=\"/\"\n            color=\"secondary\"\n            className={classes.button}\n            onClick={props.handleFormSubmit}\n           >\n            Search For Books\n          </Button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(SideNav);","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from './components/Search';\nimport Saved from './components/Saved';\nimport SideNav from './components/SideNav';\n\nimport API from './utils/API';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport 'typeface-roboto';\n\nconst drawerWidth = 300;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    background: \"aquamarine\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  }\n});\n\nclass App extends Component {\n  state = {\n    mobileOpen: false,\n    bookQuery: \"\",\n    bookList: [],\n    activePageHeader: \"Search For Books\",\n    activePage: \"Search\"\n  };\n\n  searchGoogleBooks = (query) => {\n    API.searchGoogleBooks(query)\n      .then(({ data }) => {\n        console.log(data.items);\n        const bookList = data.items.map(book => {\n          return {\n            bookId: book.id,\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors || \"Alex Rosenkranz\",\n            description: (book.searchInfo) ? book.searchInfo.textSnippet : \"No Description\",\n            link: book.volumeInfo.infoLink,\n            image: (book.volumeInfo.imageLinks) ? book.volumeInfo.imageLinks.thumbnail : \"https://via.placeholder.com/100x250\"\n          }\n        })\n        this.setState({ bookList }, () => this.handlePageChange(\"Search\"))\n      })\n      .catch(err => console.log(err));\n  }\n\n  handlePageChange = (pageTitle) => {\n    const activePageHeader = (pageTitle === \"Search\" ? \"Search For Books\" : \"View Saved Books\");\n    this.setState({activePageHeader, activePage: pageTitle})\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen\n    });\n  };\n  \n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.bookQuery) {\n      this.searchGoogleBooks(this.state.bookQuery);\n    }\n  }\n\n  handleInputChange = (event) => {\n    const {name, value} = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  saveBook = (id) => {\n    const book = this.state.bookList.find(book => book.bookId === id);\n\n    API.saveBook(book)\n      .then(({data}) => {\n        console.log(data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const {classes, theme} = this.props;\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline/>\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                color=\"secondary\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerToggle}\n                className={classes.menuButton}>\n                <MenuIcon/>\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                {this.state.activePageHeader}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer}>\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={this.props.container}\n                variant=\"temporary\"\n                anchor={theme.direction === 'rtl'\n                ? 'right'\n                : 'left'}\n                open={this.state.mobileOpen}\n                onClose={this.handleDrawerToggle}\n                classes={{\n                paper: classes.drawerPaper\n              }}\n                ModalProps={{\n                keepMounted: true, \n              }}>\n                <SideNav \n                  activePage={this.state.activePage} \n                  handleInputChange={this.handleInputChange} \n                  bookQuery={this.state.bookQuery}\n                  />\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                paper: classes.drawerPaper\n              }}\n                variant=\"permanent\"\n                open>\n      \n                <SideNav activePage={this.state.activePage} handleInputChange={this.handleInputChange} bookQuery={this.state.bookQuery} handleFormSubmit={this.handleFormSubmit}/>\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar}/>\n            <Switch>\n              <Route \n                exact \n                path=\"/\" \n                render={() => <Search\n                  handlePageChange={this.handlePageChange}\n                  bookList={this.state.bookList}\n                  saveBook={this.saveBook} \n                  activePage={this.activePage}/>\n                }\n                />\n              <Route \n                exact \n                path=\"/search\" \n                render={() => <Search \n                  handlePageChange={this.handlePageChange} \n                  bookList={this.state.bookList} \n                  saveBook={this.saveBook}\n                  activePage={this.activePage}/>\n                }\n                />\n              <Route \n                exact \n                path=\"/saved\" \n                render={() => <Saved \n                  handlePageChange={this.handlePageChange} \n                  activePage={this.activePage}/> }\n              />\n              <Route render={() => <Search\n                activePage={this.activePage}\n                handlePageChange={this.handlePageChange}\n                bookList={this.state.bookList}\n                saveBook={this.saveBook} />}\n              />\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles, {withTheme: true})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}